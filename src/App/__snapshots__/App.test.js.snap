// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders App 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <App />
</ContextProvider>
`;

exports[`Renders Purple Signature 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <App>
    <div>
      <Header
        brandInfo={
          Object {
            "appName": "Outlook Signature",
            "brandLink": "https://signatures.purple.tech/",
          }
        }
      >
        <nav
          aria-label="main navigation"
          className="navbar"
          role="navigation"
        >
          <div
            className="section"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <div
              className="container"
            >
              <div
                className="navbar-brand"
              >
                <img
                  src="/logo.png"
                  style={
                    Object {
                      "height": 60,
                    }
                  }
                />
                <a
                  className="navbar-item brand-name"
                  href="https://signatures.purple.tech/"
                >
                  Outlook Signature
                </a>
                <AzureAD
                  provider={
                    MsalAuthProvider {
                      "UserAgentApplication": [Circular],
                      "_actionQueue": Array [],
                      "_loginType": 1,
                      "_onAccountInfoHandlers": Set {
                        [Function],
                      },
                      "_onAuthenticationStateHandlers": Set {
                        [Function],
                      },
                      "_onErrorHandlers": Set {
                        [Function],
                      },
                      "_parameters": Object {
                        "scopes": Array [
                          "openid",
                          "user.read",
                        ],
                      },
                      "_reduxStore": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                      "authResponseCallback": [Function],
                      "authenticationRedirectCallback": [Function],
                      "authenticationState": "Unauthenticated",
                      "authorityInstance": AadAuthority {
                        "IsValidationEnabled": true,
                        "canonicalAuthority": "https://login.microsoftonline.com/common/",
                        "canonicalAuthorityUrlComponents": Object {
                          "AbsolutePath": "/common/",
                          "HostNameAndPort": "login.microsoftonline.com",
                          "PathSegments": Array [
                            "common",
                          ],
                          "Protocol": "https:",
                        },
                      },
                      "cacheStorage": AuthCache {
                        "cacheLocation": "sessionStorage",
                        "clientId": "14680f0a-1355-4dda-be3f-04e04ffdcb92",
                        "rollbackEnabled": true,
                      },
                      "clientId": "14680f0a-1355-4dda-be3f-04e04ffdcb92",
                      "config": Object {
                        "auth": Object {
                          "authority": "https://login.microsoftonline.com/common",
                          "clientId": "14680f0a-1355-4dda-be3f-04e04ffdcb92",
                          "navigateToLoginRequestUrl": true,
                          "postLogoutRedirectUri": [Function],
                          "redirectUri": "http://localhost",
                          "validateAuthority": true,
                        },
                        "cache": Object {
                          "cacheLocation": "sessionStorage",
                          "storeAuthStateInCookie": true,
                        },
                        "framework": Object {
                          "isAngular": false,
                          "protectedResourceMap": Map {},
                          "unprotectedResources": Array [],
                        },
                        "system": Object {
                          "loadFrameTimeout": 6000,
                          "logger": Logger {
                            "correlationId": "",
                            "level": 2,
                            "localCallback": null,
                            "piiLoggingEnabled": false,
                          },
                          "navigateFrameWait": 500,
                          "tokenRenewalOffsetSeconds": 300,
                        },
                      },
                      "dispatchAction": [Function],
                      "errorReceivedCallback": null,
                      "getAccessToken": [Function],
                      "getAccountInfo": [Function],
                      "getAuthenticationParameters": [Function],
                      "getError": [Function],
                      "getIdToken": [Function],
                      "handleAcquireTokenSuccess": [Function],
                      "handleLoginFailed": [Function],
                      "handleLoginSuccess": [Function],
                      "inCookie": true,
                      "initializeProvider": [Function],
                      "logger": Logger {
                        "correlationId": "",
                        "level": 2,
                        "localCallback": null,
                        "piiLoggingEnabled": false,
                      },
                      "login": [Function],
                      "loginToRefreshToken": [Function],
                      "logout": [Function],
                      "processLogin": [Function],
                      "redirectCallbacksSet": true,
                      "registerAcountInfoHandler": [Function],
                      "registerAuthenticationStateHandler": [Function],
                      "registerErrorHandler": [Function],
                      "registerReduxStore": [Function],
                      "setAccountInfo": [Function],
                      "setAuthenticationParameters": [Function],
                      "setAuthenticationState": [Function],
                      "setError": [Function],
                      "setLoginType": [Function],
                      "telemetryManager": null,
                      "tokenReceivedCallback": null,
                      "unregisterAccountInfoHandler": [Function],
                      "unregisterAuthenticationStateHandler": [Function],
                      "unregisterErrorHandler": [Function],
                    }
                  }
                  reduxStore={
                    Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    }
                  }
                >
                  <div
                    className="navbar-item login"
                  >
                    <button
                      className="button"
                      onClick={[Function]}
                      type="button"
                    >
                      Login
                    </button>
                  </div>
                </AzureAD>
              </div>
            </div>
            <div
              className="column"
            />
          </div>
        </nav>
      </Header>
      <section
        className="section"
      >
        <div
          className="container"
        >
          <Info>
            <div
              className="content"
            >
              <h3
                className="title"
              >
                Create your signature
              </h3>
              <ol>
                <li>
                  Enter your details.
                </li>
                <li>
                  Click the "Copy Signature" button
                </li>
                <li>
                  Open outlook
                </li>
                <li>
                  <a
                    href="https://support.office.com/en-us/article/create-and-add-a-signature-to-messages-8ee5d4f4-68fd-464a-a1c1-0e1c80bb27f2"
                    rel="noopener noreferrer"
                    style={
                      Object {
                        "fontWeight": "bold",
                        "textDecoration": "underline",
                      }
                    }
                    target="_blank"
                  >
                    Paste selection into signature editor
                  </a>
                  <ul
                    style={
                      Object {
                        "listStyleType": "none",
                        "margin": "0",
                        "paddingLeft": "1rem",
                        "paddingTop": "0.5rem",
                      }
                    }
                  >
                    <li
                      style={
                        Object {
                          "marginBottom": "0.5rem",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "fontWeight": "bold",
                          }
                        }
                      >
                        Windows: 
                      </span>
                      File &gt; Options &gt; Mail &gt; Signatures
                    </li>
                    <li>
                      <span
                        style={
                          Object {
                            "fontWeight": "bold",
                          }
                        }
                      >
                        Mac: 
                      </span>
                      Outlook &gt; Preferences &gt; Signatures
                    </li>
                    <li>
                      <span
                        style={
                          Object {
                            "fontWeight": "bold",
                          }
                        }
                      >
                        Outlook web access (OWA):
                         
                      </span>
                      Cog (top-right) &gt; "View all Outlook settings" link (bottom) &gt; Mail &gt; Compose and reply &gt; Email signature
                    </li>
                  </ul>
                </li>
              </ol>
              <br />
            </div>
          </Info>
          <Connect(Form)>
            <Form
              accessToken={null}
              fetchProfile={[Function]}
              profile={null}
            >
              <form>
                <div
                  className="field is-horizontal"
                  key="signatureTypes"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-signatureTypes"
                    >
                      Signature Type
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="signatureTypes"
                    >
                      <div
                        className="field is-narrow"
                      >
                        <div
                          className="control"
                        >
                          <label
                            className="radio"
                            key="0"
                          >
                            <input
                              checked={true}
                              className="radioInput"
                              id="telstraPurple"
                              name="signatureTypeOpt"
                              onChange={[Function]}
                              type="radio"
                            />
                            Telstra Purple
                          </label>
                          <label
                            className="radio"
                            key="1"
                          >
                            <input
                              checked={false}
                              className="radioInput"
                              id="telstraPurpleManagedServices"
                              name="signatureTypeOpt"
                              onChange={[Function]}
                              type="radio"
                            />
                            Telstra Purple Managed Services
                          </label>
                          <label
                            className="radio"
                            key="2"
                          >
                            <input
                              checked={false}
                              className="radioInput"
                              id="telstraPurpleEmea"
                              name="signatureTypeOpt"
                              onChange={[Function]}
                              type="radio"
                            />
                            Telstra Purple EMEA
                          </label>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="name"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-name"
                    >
                      Your Name
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="name"
                    >
                      <input
                        className="input"
                        id="input-name"
                        onChange={[Function]}
                        placeholder="Your Name"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="pronoun"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-pronoun"
                    >
                      Your Pronouns
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="pronoun"
                    >
                      <input
                        className="input"
                        id="input-pronoun"
                        onChange={[Function]}
                        placeholder="he/him | she/her | they/them"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="title"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-title"
                    >
                      Job Title or Team
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="title"
                    >
                      <input
                        className="input"
                        id="input-title"
                        onChange={[Function]}
                        placeholder="Job Title"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="qualifications"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-qualifications"
                    >
                      Qualifications
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="qualifications"
                    >
                      <input
                        className="input"
                        id="input-qualifications"
                        onChange={[Function]}
                        placeholder="Jedi Master | PSM I"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="mobile"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-mobile"
                    >
                      Mobile
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="mobile"
                    >
                      <input
                        className="input"
                        id="input-mobile"
                        onChange={[Function]}
                        placeholder="+61 111 222 333"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="tel"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="email"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-email"
                    >
                      Email
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="email"
                    >
                      <input
                        className="input"
                        id="input-email"
                        onChange={[Function]}
                        placeholder="your.name@purple.telstra.com"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="email"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="twitter"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-twitter"
                    >
                      Twitter
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="twitter"
                    >
                      <input
                        className="input"
                        id="input-twitter"
                        onChange={[Function]}
                        placeholder="myTwitterHandle"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <hr />
                <withProps(mapProps(SignatureContainer))
                  email=""
                  mobile=""
                  name=""
                  placeholders={
                    Object {
                      "email": "your.name@purple.telstra.com",
                      "mobile": "+61 111 222 333",
                      "name": "Your Name",
                      "pronoun": "he/him | she/her | they/them",
                      "qualifications": "Jedi Master | PSM I",
                      "supportEmail": "support@some.domain",
                      "supportHotline": "1800 xyz xyz",
                      "title": "Job Title",
                      "twitter": "myTwitterHandle",
                    }
                  }
                  pronoun=""
                  qualifications=""
                  sigType={false}
                  signatureTypes={
                    Array [
                      Object {
                        "checked": true,
                        "text": "Telstra Purple",
                        "type": "purple",
                      },
                      Object {
                        "checked": false,
                        "text": "Telstra Purple Managed Services",
                        "type": "support",
                      },
                      Object {
                        "checked": false,
                        "text": "Telstra Purple EMEA",
                        "type": "EMEA",
                      },
                    ]
                  }
                  title=""
                  twitter=""
                >
                  <mapProps(SignatureContainer)
                    Container={[Function]}
                    email=""
                    mobile=""
                    name=""
                    placeholders={
                      Object {
                        "email": "your.name@purple.telstra.com",
                        "mobile": "+61 111 222 333",
                        "name": "Your Name",
                        "pronoun": "he/him | she/her | they/them",
                        "qualifications": "Jedi Master | PSM I",
                        "supportEmail": "support@some.domain",
                        "supportHotline": "1800 xyz xyz",
                        "title": "Job Title",
                        "twitter": "myTwitterHandle",
                      }
                    }
                    pronoun=""
                    qualifications=""
                    sigType={false}
                    signatureTypes={
                      Array [
                        Object {
                          "checked": true,
                          "text": "Telstra Purple",
                          "type": "purple",
                        },
                        Object {
                          "checked": false,
                          "text": "Telstra Purple Managed Services",
                          "type": "support",
                        },
                        Object {
                          "checked": false,
                          "text": "Telstra Purple EMEA",
                          "type": "EMEA",
                        },
                      ]
                    }
                    title=""
                    twitter=""
                  >
                    <SignatureContainer
                      Container={[Function]}
                      containerProps={
                        Object {
                          "CopyRepliesAndForwardsHtml": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />,
                          "CopyRepliesAndForwardsText": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />,
                          "CopySignatureHtml": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />,
                          "CopySignatureText": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />,
                          "signatureProps": Object {
                            "brandLink": "https://purple.telstra.com/",
                            "brandLinkName": "purple.telstra.com",
                            "brandLogo": Object {
                              "alt": "Telstra Purple",
                              "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                            },
                            "brandName": "Telstra Purple",
                            "email": "your.name@purple.telstra.com",
                            "mobile": "+61 111 222 333",
                            "name": "Your Name",
                            "pronoun": "he/him | she/her | they/them",
                            "qualifications": "",
                            "sigType": false,
                            "title": "",
                            "twitter": "",
                          },
                        }
                      }
                    >
                      <PurpleSignatureContainer
                        CopyRepliesAndForwardsHtml={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />
                        }
                        CopyRepliesAndForwardsText={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />
                        }
                        CopySignatureHtml={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />
                        }
                        CopySignatureText={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />
                        }
                        signatureProps={
                          Object {
                            "brandLink": "https://purple.telstra.com/",
                            "brandLinkName": "purple.telstra.com",
                            "brandLogo": Object {
                              "alt": "Telstra Purple",
                              "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                            },
                            "brandName": "Telstra Purple",
                            "email": "your.name@purple.telstra.com",
                            "mobile": "+61 111 222 333",
                            "name": "Your Name",
                            "pronoun": "he/him | she/her | they/them",
                            "qualifications": "",
                            "sigType": false,
                            "title": "",
                            "twitter": "",
                          }
                        }
                      >
                        <div
                          className="content"
                        >
                          <div
                            className="level"
                          >
                            <div
                              className="level-left"
                            >
                              <h3
                                className="level-item"
                              >
                                Standard Signature
                              </h3>
                            </div>
                            <div
                              className="level-right"
                            >
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button"
                                    classState="button"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy text only"
                                    textState="Copy text only"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button"
                                      classState="button"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy text only"
                                      textState="Copy text only"
                                    >
                                      <Button
                                        classState="button"
                                        onClick={[Function]}
                                        textState="Copy text only"
                                      >
                                        <button
                                          className="button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy text only
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button is-primary"
                                    classState="button is-primary"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy signature"
                                    textState="Copy signature"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button is-primary"
                                      classState="button is-primary"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy signature"
                                      textState="Copy signature"
                                    >
                                      <Button
                                        classState="button is-primary"
                                        onClick={[Function]}
                                        textState="Copy signature"
                                      >
                                        <button
                                          className="button is-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy signature
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                            </div>
                          </div>
                          <Signature
                            brandLink="https://purple.telstra.com/"
                            brandLinkName="purple.telstra.com"
                            brandLogo={
                              Object {
                                "alt": "Telstra Purple",
                                "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                              }
                            }
                            brandName="Telstra Purple"
                            email="your.name@purple.telstra.com"
                            mobile="+61 111 222 333"
                            name="Your Name"
                            pronoun="he/him | she/her | they/them"
                            qualifications=""
                            sigType={false}
                            title=""
                            twitter=""
                          >
                            <div
                              className="content"
                            >
                              <table
                                border="0"
                                cellPadding="0"
                                cellSpacing="0"
                                style={
                                  Object {
                                    "color": "black",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "9pt",
                                    "width": "500px",
                                  }
                                }
                              >
                                <tr>
                                  <td
                                    valign="top"
                                  >
                                    <div
                                      style={
                                        Object {
                                          "height": "15px",
                                          "lineHeight": "15px",
                                        }
                                      }
                                    >
                                       
                                    </div>
                                    <p>
                                      <b>
                                        Your Name
                                         (
                                        he/him | she/her | they/them
                                        )
                                      </b>
                                      <br />
                                      Telstra Purple
                                    </p>
                                  </td>
                                  <td
                                    style={
                                      Object {
                                        "paddingRight": "20px",
                                        "width": "96px",
                                      }
                                    }
                                    valign="top"
                                  >
                                    <img
                                      alt="Telstra Purple"
                                      height="83"
                                      src="https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png"
                                      style={
                                        Object {
                                          "height": "83px",
                                          "maxWidth": "none",
                                          "width": "83px",
                                        }
                                      }
                                      width="83"
                                    />
                                  </td>
                                </tr>
                                <tr>
                                  <td
                                    colSpan="2"
                                  >
                                    <table
                                      border="0"
                                      cellPadding="0"
                                      cellSpacing="0"
                                      style={
                                        Object {
                                          "color": "black",
                                          "fontFamily": "Arial, sans-serif",
                                          "fontSize": "9pt",
                                          "margin": 0,
                                          "padding": 0,
                                        }
                                      }
                                    >
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                              "width": "30px",
                                            }
                                          }
                                        >
                                          <b>
                                            M
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                              }
                                            }
                                            href="tel:+61111222333"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          />
                                        </td>
                                      </tr>
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <b>
                                            E
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            href="mailto:your.name@purple.telstra.com"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          >
                                            your.name@purple.telstra.com
                                          </a>
                                        </td>
                                      </tr>
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <b>
                                            W
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            href="https://purple.telstra.com/"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          >
                                            purple.telstra.com
                                          </a>
                                        </td>
                                      </tr>
                                    </table>
                                  </td>
                                </tr>
                                <tr>
                                  <td
                                    style={
                                      Object {
                                        "color": "#4a4a4a",
                                        "fontFamily": "Arial, sans-serif",
                                        "fontSize": "6.5pt",
                                        "lineHeight": "1.5",
                                      }
                                    }
                                  >
                                    This email may contain confidential information.
                                    <br />
                                    If I've sent it to you by accident, please delete it immediately.
                                  </td>
                                </tr>
                              </table>
                            </div>
                          </Signature>
                          <div
                            className="level"
                          >
                            <div
                              className="level-left"
                            >
                              <h3
                                className="level-item"
                              >
                                Replies and Forwards Signature
                              </h3>
                            </div>
                            <div
                              className="level-right"
                            >
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button"
                                    classState="button"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy text only"
                                    textState="Copy text only"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button"
                                      classState="button"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy text only"
                                      textState="Copy text only"
                                    >
                                      <Button
                                        classState="button"
                                        onClick={[Function]}
                                        textState="Copy text only"
                                      >
                                        <button
                                          className="button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy text only
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button is-primary"
                                    classState="button is-primary"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy signature"
                                    textState="Copy signature"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button is-primary"
                                      classState="button is-primary"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy signature"
                                      textState="Copy signature"
                                    >
                                      <Button
                                        classState="button is-primary"
                                        onClick={[Function]}
                                        textState="Copy signature"
                                      >
                                        <button
                                          className="button is-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy signature
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                            </div>
                          </div>
                          <RepliesAndForwards
                            brandLink="https://purple.telstra.com/"
                            brandLinkName="purple.telstra.com"
                            brandLogo={
                              Object {
                                "alt": "Telstra Purple",
                                "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                              }
                            }
                            brandName="Telstra Purple"
                            email="your.name@purple.telstra.com"
                            mobile="+61 111 222 333"
                            name="Your Name"
                            pronoun="he/him | she/her | they/them"
                            qualifications=""
                            sigType={false}
                            title=""
                            twitter=""
                          >
                            <div>
                              <p
                                style={
                                  Object {
                                    "color": "black",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "9pt",
                                  }
                                }
                              >
                                --
                                <br />
                                <b>
                                  Your Name
                                   (
                                  he/him | she/her | they/them
                                  ) | 
                                  Telstra Purple
                                </b>
                                <br />
                                <b>
                                  M
                                </b>
                                 
                                <a
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                    }
                                  }
                                  href="tel:+61111222333"
                                  style={
                                    Object {
                                      "color": "#0E39FB",
                                    }
                                  }
                                />
                                 
                                | 
                                <b>
                                  E
                                </b>
                                 
                                <a
                                  href="mailto:your.name@purple.telstra.com"
                                  style={
                                    Object {
                                      "color": "#0E39FB",
                                    }
                                  }
                                >
                                  your.name@purple.telstra.com
                                </a>
                                 
                                |
                                 
                                <b>
                                  W
                                </b>
                                 
                                <a
                                  href="https://purple.telstra.com/"
                                  style={
                                    Object {
                                      "color": "#0E39FB",
                                    }
                                  }
                                >
                                  purple.telstra.com
                                </a>
                              </p>
                              <div
                                style={
                                  Object {
                                    "color": "#4a4a4a",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "6.5pt",
                                    "lineHeight": "1.5",
                                  }
                                }
                              >
                                This email may contain confidential information.
                                <br />
                                If I've sent it to you by accident, please delete it immediately.
                              </div>
                            </div>
                          </RepliesAndForwards>
                        </div>
                      </PurpleSignatureContainer>
                    </SignatureContainer>
                  </mapProps(SignatureContainer)>
                </withProps(mapProps(SignatureContainer))>
              </form>
            </Form>
          </Connect(Form)>
        </div>
      </section>
    </div>
  </App>
</Provider>
`;

exports[`Renders Purple Signature 2`] = `
Array [
  "Warning: validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s",
  "<tr>",
  "table",
]
`;

exports[`Renders Purple support 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <App>
    <div>
      <Header
        brandInfo={
          Object {
            "appName": "Outlook Signature",
            "brandLink": "https://signatures.purple.tech/",
          }
        }
      >
        <nav
          aria-label="main navigation"
          className="navbar"
          role="navigation"
        >
          <div
            className="section"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <div
              className="container"
            >
              <div
                className="navbar-brand"
              >
                <img
                  src="/logo.png"
                  style={
                    Object {
                      "height": 60,
                    }
                  }
                />
                <a
                  className="navbar-item brand-name"
                  href="https://signatures.purple.tech/"
                >
                  Outlook Signature
                </a>
                <AzureAD
                  provider={
                    MsalAuthProvider {
                      "UserAgentApplication": [Circular],
                      "_actionQueue": Array [],
                      "_loginType": 1,
                      "_onAccountInfoHandlers": Set {
                        [Function],
                        [Function],
                      },
                      "_onAuthenticationStateHandlers": Set {
                        [Function],
                        [Function],
                      },
                      "_onErrorHandlers": Set {
                        [Function],
                        [Function],
                      },
                      "_parameters": Object {
                        "scopes": Array [
                          "openid",
                          "user.read",
                        ],
                      },
                      "_reduxStore": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                      "authResponseCallback": [Function],
                      "authenticationRedirectCallback": [Function],
                      "authenticationState": "Unauthenticated",
                      "authorityInstance": AadAuthority {
                        "IsValidationEnabled": true,
                        "canonicalAuthority": "https://login.microsoftonline.com/common/",
                        "canonicalAuthorityUrlComponents": Object {
                          "AbsolutePath": "/common/",
                          "HostNameAndPort": "login.microsoftonline.com",
                          "PathSegments": Array [
                            "common",
                          ],
                          "Protocol": "https:",
                        },
                      },
                      "cacheStorage": AuthCache {
                        "cacheLocation": "sessionStorage",
                        "clientId": "14680f0a-1355-4dda-be3f-04e04ffdcb92",
                        "rollbackEnabled": true,
                      },
                      "clientId": "14680f0a-1355-4dda-be3f-04e04ffdcb92",
                      "config": Object {
                        "auth": Object {
                          "authority": "https://login.microsoftonline.com/common",
                          "clientId": "14680f0a-1355-4dda-be3f-04e04ffdcb92",
                          "navigateToLoginRequestUrl": true,
                          "postLogoutRedirectUri": [Function],
                          "redirectUri": "http://localhost",
                          "validateAuthority": true,
                        },
                        "cache": Object {
                          "cacheLocation": "sessionStorage",
                          "storeAuthStateInCookie": true,
                        },
                        "framework": Object {
                          "isAngular": false,
                          "protectedResourceMap": Map {},
                          "unprotectedResources": Array [],
                        },
                        "system": Object {
                          "loadFrameTimeout": 6000,
                          "logger": Logger {
                            "correlationId": "",
                            "level": 2,
                            "localCallback": null,
                            "piiLoggingEnabled": false,
                          },
                          "navigateFrameWait": 500,
                          "tokenRenewalOffsetSeconds": 300,
                        },
                      },
                      "dispatchAction": [Function],
                      "errorReceivedCallback": null,
                      "getAccessToken": [Function],
                      "getAccountInfo": [Function],
                      "getAuthenticationParameters": [Function],
                      "getError": [Function],
                      "getIdToken": [Function],
                      "handleAcquireTokenSuccess": [Function],
                      "handleLoginFailed": [Function],
                      "handleLoginSuccess": [Function],
                      "inCookie": true,
                      "initializeProvider": [Function],
                      "logger": Logger {
                        "correlationId": "",
                        "level": 2,
                        "localCallback": null,
                        "piiLoggingEnabled": false,
                      },
                      "login": [Function],
                      "loginToRefreshToken": [Function],
                      "logout": [Function],
                      "processLogin": [Function],
                      "redirectCallbacksSet": true,
                      "registerAcountInfoHandler": [Function],
                      "registerAuthenticationStateHandler": [Function],
                      "registerErrorHandler": [Function],
                      "registerReduxStore": [Function],
                      "setAccountInfo": [Function],
                      "setAuthenticationParameters": [Function],
                      "setAuthenticationState": [Function],
                      "setError": [Function],
                      "setLoginType": [Function],
                      "telemetryManager": null,
                      "tokenReceivedCallback": null,
                      "unregisterAccountInfoHandler": [Function],
                      "unregisterAuthenticationStateHandler": [Function],
                      "unregisterErrorHandler": [Function],
                    }
                  }
                  reduxStore={
                    Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    }
                  }
                >
                  <div
                    className="navbar-item login"
                  >
                    <button
                      className="button"
                      onClick={[Function]}
                      type="button"
                    >
                      Login
                    </button>
                  </div>
                </AzureAD>
              </div>
            </div>
            <div
              className="column"
            />
          </div>
        </nav>
      </Header>
      <section
        className="section"
      >
        <div
          className="container"
        >
          <Info>
            <div
              className="content"
            >
              <h3
                className="title"
              >
                Create your signature
              </h3>
              <ol>
                <li>
                  Enter your details.
                </li>
                <li>
                  Click the "Copy Signature" button
                </li>
                <li>
                  Open outlook
                </li>
                <li>
                  <a
                    href="https://support.office.com/en-us/article/create-and-add-a-signature-to-messages-8ee5d4f4-68fd-464a-a1c1-0e1c80bb27f2"
                    rel="noopener noreferrer"
                    style={
                      Object {
                        "fontWeight": "bold",
                        "textDecoration": "underline",
                      }
                    }
                    target="_blank"
                  >
                    Paste selection into signature editor
                  </a>
                  <ul
                    style={
                      Object {
                        "listStyleType": "none",
                        "margin": "0",
                        "paddingLeft": "1rem",
                        "paddingTop": "0.5rem",
                      }
                    }
                  >
                    <li
                      style={
                        Object {
                          "marginBottom": "0.5rem",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "fontWeight": "bold",
                          }
                        }
                      >
                        Windows: 
                      </span>
                      File &gt; Options &gt; Mail &gt; Signatures
                    </li>
                    <li>
                      <span
                        style={
                          Object {
                            "fontWeight": "bold",
                          }
                        }
                      >
                        Mac: 
                      </span>
                      Outlook &gt; Preferences &gt; Signatures
                    </li>
                    <li>
                      <span
                        style={
                          Object {
                            "fontWeight": "bold",
                          }
                        }
                      >
                        Outlook web access (OWA):
                         
                      </span>
                      Cog (top-right) &gt; "View all Outlook settings" link (bottom) &gt; Mail &gt; Compose and reply &gt; Email signature
                    </li>
                  </ul>
                </li>
              </ol>
              <br />
            </div>
          </Info>
          <Connect(Form)>
            <Form
              accessToken={null}
              fetchProfile={[Function]}
              profile={null}
            >
              <form>
                <div
                  className="field is-horizontal"
                  key="signatureTypes"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-signatureTypes"
                    >
                      Signature Type
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="signatureTypes"
                    >
                      <div
                        className="field is-narrow"
                      >
                        <div
                          className="control"
                        >
                          <label
                            className="radio"
                            key="0"
                          >
                            <input
                              checked={false}
                              className="radioInput"
                              id="telstraPurple"
                              name="signatureTypeOpt"
                              onChange={[Function]}
                              type="radio"
                            />
                            Telstra Purple
                          </label>
                          <label
                            className="radio"
                            key="1"
                          >
                            <input
                              checked={true}
                              className="radioInput"
                              id="telstraPurpleManagedServices"
                              name="signatureTypeOpt"
                              onChange={[Function]}
                              type="radio"
                            />
                            Telstra Purple Managed Services
                          </label>
                          <label
                            className="radio"
                            key="2"
                          >
                            <input
                              checked={false}
                              className="radioInput"
                              id="telstraPurpleEmea"
                              name="signatureTypeOpt"
                              onChange={[Function]}
                              type="radio"
                            />
                            Telstra Purple EMEA
                          </label>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="name"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-name"
                    >
                      Your Name
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="name"
                    >
                      <input
                        className="input"
                        id="input-name"
                        onChange={[Function]}
                        placeholder="Your Name"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="pronoun"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-pronoun"
                    >
                      Your Pronouns
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="pronoun"
                    >
                      <input
                        className="input"
                        id="input-pronoun"
                        onChange={[Function]}
                        placeholder="he/him | she/her | they/them"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="title"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-title"
                    >
                      Job Title or Team
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="title"
                    >
                      <input
                        className="input"
                        id="input-title"
                        onChange={[Function]}
                        placeholder="Job Title"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="qualifications"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-qualifications"
                    >
                      Qualifications
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="qualifications"
                    >
                      <input
                        className="input"
                        id="input-qualifications"
                        onChange={[Function]}
                        placeholder="Jedi Master | PSM I"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="mobile"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-mobile"
                    >
                      Mobile
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="mobile"
                    >
                      <input
                        className="input"
                        id="input-mobile"
                        onChange={[Function]}
                        placeholder="+61 111 222 333"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="tel"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="email"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-email"
                    >
                      Email
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="email"
                    >
                      <input
                        className="input"
                        id="input-email"
                        onChange={[Function]}
                        placeholder="your.name@purple.telstra.com"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="email"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="supportHotline"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-supportHotline"
                    >
                      Support Hotline
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="supportHotline"
                    >
                      <input
                        className="input"
                        id="input-supportHotline"
                        onChange={[Function]}
                        placeholder="1800 xyz xyz"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="tel"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="supportEmail"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-supportEmail"
                    >
                      Support Email
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                        title="Required"
                      >
                        *
                      </span>
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="supportEmail"
                    >
                      <input
                        className="input"
                        id="input-supportEmail"
                        onChange={[Function]}
                        placeholder="support@some.domain"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="email"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="field is-horizontal"
                  key="twitter"
                >
                  <div
                    className="field-label is-normal"
                  >
                    <label
                      className="label field-label"
                      for="input-twitter"
                    >
                      Twitter
                    </label>
                  </div>
                  <div
                    className="field-body"
                  >
                    <div
                      className="control"
                      key="twitter"
                    >
                      <input
                        className="input"
                        id="input-twitter"
                        onChange={[Function]}
                        placeholder="myTwitterHandle"
                        style={
                          Object {
                            "width": "300px",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <hr />
                <withProps(mapProps(SignatureContainer))
                  email=""
                  mobile=""
                  name=""
                  placeholders={
                    Object {
                      "email": "your.name@purple.telstra.com",
                      "mobile": "+61 111 222 333",
                      "name": "Your Name",
                      "pronoun": "he/him | she/her | they/them",
                      "qualifications": "Jedi Master | PSM I",
                      "supportEmail": "support@some.domain",
                      "supportHotline": "1800 xyz xyz",
                      "title": "Job Title",
                      "twitter": "myTwitterHandle",
                    }
                  }
                  pronoun=""
                  qualifications=""
                  sigType="support"
                  signatureTypes={
                    Array [
                      Object {
                        "checked": false,
                        "text": "Telstra Purple",
                        "type": "purple",
                      },
                      Object {
                        "checked": true,
                        "text": "Telstra Purple Managed Services",
                        "type": "support",
                      },
                      Object {
                        "checked": false,
                        "text": "Telstra Purple EMEA",
                        "type": "EMEA",
                      },
                    ]
                  }
                  supportEmail=""
                  supportHotline=""
                  title=""
                  twitter=""
                >
                  <mapProps(SignatureContainer)
                    Container={[Function]}
                    email=""
                    mobile=""
                    name=""
                    placeholders={
                      Object {
                        "email": "your.name@purple.telstra.com",
                        "mobile": "+61 111 222 333",
                        "name": "Your Name",
                        "pronoun": "he/him | she/her | they/them",
                        "qualifications": "Jedi Master | PSM I",
                        "supportEmail": "support@some.domain",
                        "supportHotline": "1800 xyz xyz",
                        "title": "Job Title",
                        "twitter": "myTwitterHandle",
                      }
                    }
                    pronoun=""
                    qualifications=""
                    sigType="support"
                    signatureTypes={
                      Array [
                        Object {
                          "checked": false,
                          "text": "Telstra Purple",
                          "type": "purple",
                        },
                        Object {
                          "checked": true,
                          "text": "Telstra Purple Managed Services",
                          "type": "support",
                        },
                        Object {
                          "checked": false,
                          "text": "Telstra Purple EMEA",
                          "type": "EMEA",
                        },
                      ]
                    }
                    supportEmail=""
                    supportHotline=""
                    title=""
                    twitter=""
                  >
                    <SignatureContainer
                      Container={[Function]}
                      containerProps={
                        Object {
                          "CopyRepliesAndForwardsHtml": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />,
                          "CopyRepliesAndForwardsText": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />,
                          "CopySignatureHtml": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />,
                          "CopySignatureText": <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />,
                          "signatureProps": Object {
                            "brandLink": "https://purple.telstra.com/",
                            "brandLinkName": "purple.telstra.com",
                            "brandLogo": Object {
                              "alt": "Telstra Purple",
                              "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                            },
                            "brandName": "Telstra Purple",
                            "email": "your.name@purple.telstra.com",
                            "mobile": "+61 111 222 333",
                            "name": "Your Name",
                            "pronoun": "he/him | she/her | they/them",
                            "qualifications": "",
                            "sigType": "support",
                            "supportEmail": "support@some.domain",
                            "supportHotline": "1800 xyz xyz",
                            "title": "",
                            "twitter": "",
                          },
                        }
                      }
                    >
                      <PurpleSignatureContainer
                        CopyRepliesAndForwardsHtml={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />
                        }
                        CopyRepliesAndForwardsText={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />
                        }
                        CopySignatureHtml={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          />
                        }
                        CopySignatureText={
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          />
                        }
                        signatureProps={
                          Object {
                            "brandLink": "https://purple.telstra.com/",
                            "brandLinkName": "purple.telstra.com",
                            "brandLogo": Object {
                              "alt": "Telstra Purple",
                              "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                            },
                            "brandName": "Telstra Purple",
                            "email": "your.name@purple.telstra.com",
                            "mobile": "+61 111 222 333",
                            "name": "Your Name",
                            "pronoun": "he/him | she/her | they/them",
                            "qualifications": "",
                            "sigType": "support",
                            "supportEmail": "support@some.domain",
                            "supportHotline": "1800 xyz xyz",
                            "title": "",
                            "twitter": "",
                          }
                        }
                      >
                        <div
                          className="content"
                        >
                          <div
                            className="level"
                          >
                            <div
                              className="level-left"
                            >
                              <h3
                                className="level-item"
                              >
                                Standard Signature
                              </h3>
                            </div>
                            <div
                              className="level-right"
                            >
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button"
                                    classState="button"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy text only"
                                    textState="Copy text only"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button"
                                      classState="button"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy text only"
                                      textState="Copy text only"
                                    >
                                      <Button
                                        classState="button"
                                        onClick={[Function]}
                                        textState="Copy text only"
                                      >
                                        <button
                                          className="button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy text only
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button is-primary"
                                    classState="button is-primary"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy signature"
                                    textState="Copy signature"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button is-primary"
                                      classState="button is-primary"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy signature"
                                      textState="Copy signature"
                                    >
                                      <Button
                                        classState="button is-primary"
                                        onClick={[Function]}
                                        textState="Copy signature"
                                      >
                                        <button
                                          className="button is-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy signature
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                            </div>
                          </div>
                          <Signature
                            brandLink="https://purple.telstra.com/"
                            brandLinkName="purple.telstra.com"
                            brandLogo={
                              Object {
                                "alt": "Telstra Purple",
                                "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                              }
                            }
                            brandName="Telstra Purple"
                            email="your.name@purple.telstra.com"
                            mobile="+61 111 222 333"
                            name="Your Name"
                            pronoun="he/him | she/her | they/them"
                            qualifications=""
                            sigType="support"
                            supportEmail="support@some.domain"
                            supportHotline="1800 xyz xyz"
                            title=""
                            twitter=""
                          >
                            <div
                              className="content"
                            >
                              <table
                                border="0"
                                cellPadding="0"
                                cellSpacing="0"
                                style={
                                  Object {
                                    "color": "black",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "9pt",
                                    "width": "500px",
                                  }
                                }
                              >
                                <tr>
                                  <td
                                    valign="top"
                                  >
                                    <div
                                      style={
                                        Object {
                                          "height": "15px",
                                          "lineHeight": "15px",
                                        }
                                      }
                                    >
                                       
                                    </div>
                                    <p>
                                      <b>
                                        Your Name
                                         (
                                        he/him | she/her | they/them
                                        )
                                      </b>
                                      <br />
                                      Telstra Purple
                                    </p>
                                  </td>
                                  <td
                                    style={
                                      Object {
                                        "paddingRight": "20px",
                                        "width": "96px",
                                      }
                                    }
                                    valign="top"
                                  >
                                    <img
                                      alt="Telstra Purple"
                                      height="83"
                                      src="https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png"
                                      style={
                                        Object {
                                          "height": "83px",
                                          "maxWidth": "none",
                                          "width": "83px",
                                        }
                                      }
                                      width="83"
                                    />
                                  </td>
                                </tr>
                                <tr>
                                  <td
                                    colSpan="2"
                                  >
                                    <table
                                      border="0"
                                      cellPadding="0"
                                      cellSpacing="0"
                                      style={
                                        Object {
                                          "color": "black",
                                          "fontFamily": "Arial, sans-serif",
                                          "fontSize": "9pt",
                                          "margin": 0,
                                          "padding": 0,
                                        }
                                      }
                                    >
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                              "width": "30px",
                                            }
                                          }
                                        >
                                          <b>
                                            M
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                              }
                                            }
                                            href="tel:+61111222333"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          />
                                        </td>
                                      </tr>
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <b>
                                            E
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            href="mailto:your.name@purple.telstra.com"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          >
                                            your.name@purple.telstra.com
                                          </a>
                                        </td>
                                      </tr>
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <b>
                                            W
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            href="https://purple.telstra.com/"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          >
                                            purple.telstra.com
                                          </a>
                                        </td>
                                      </tr>
                                    </table>
                                    <table
                                      border="0"
                                      cellPadding="0"
                                      cellSpacing="0"
                                      style={
                                        Object {
                                          "color": "black",
                                          "fontFamily": "Arial, sans-serif",
                                          "fontSize": "9pt",
                                          "margin": 0,
                                          "padding": 0,
                                        }
                                      }
                                    >
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                              "width": "100px",
                                            }
                                          }
                                        >
                                          <b>
                                            Support Hotline
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            dangerouslySetInnerHTML={
                                              Object {
                                                "__html": "1800 xyz xyz",
                                              }
                                            }
                                            href="tel:1800 xyz xyz"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          />
                                        </td>
                                      </tr>
                                      <tr>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <b>
                                            Support Email
                                          </b>
                                        </td>
                                        <td
                                          style={
                                            Object {
                                              "padding": 0,
                                            }
                                          }
                                        >
                                          <a
                                            href="mailto:support@some.domain"
                                            style={
                                              Object {
                                                "color": "#0E39FB",
                                              }
                                            }
                                          >
                                            support@some.domain
                                          </a>
                                        </td>
                                      </tr>
                                    </table>
                                  </td>
                                </tr>
                                <tr>
                                  <td
                                    style={
                                      Object {
                                        "color": "#4a4a4a",
                                        "fontFamily": "Arial, sans-serif",
                                        "fontSize": "6.5pt",
                                        "lineHeight": "1.5",
                                      }
                                    }
                                  >
                                    This email may contain confidential information.
                                    <br />
                                    If I've sent it to you by accident, please delete it immediately.
                                  </td>
                                </tr>
                              </table>
                            </div>
                          </Signature>
                          <div
                            className="level"
                          >
                            <div
                              className="level-left"
                            >
                              <h3
                                className="level-item"
                              >
                                Replies and Forwards Signature
                              </h3>
                            </div>
                            <div
                              className="level-right"
                            >
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button"
                                    classState="button"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy text only"
                                    textState="Copy text only"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button"
                                      classState="button"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy text only"
                                      textState="Copy text only"
                                    >
                                      <Button
                                        classState="button"
                                        onClick={[Function]}
                                        textState="Copy text only"
                                      >
                                        <button
                                          className="button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy text only
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                              <withState(withState(withHandlers(mapProps(Button))))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                onClickHandler={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                              >
                                <withState(withHandlers(mapProps(Button)))
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                >
                                  <withHandlers(mapProps(Button))
                                    classAfter="button is-success"
                                    classBefore="button is-primary"
                                    classState="button is-primary"
                                    onClickHandler={[Function]}
                                    setClass={[Function]}
                                    setText={[Function]}
                                    textAfter="Copied!"
                                    textBefore="Copy signature"
                                    textState="Copy signature"
                                  >
                                    <mapProps(Button)
                                      classAfter="button is-success"
                                      classBefore="button is-primary"
                                      classState="button is-primary"
                                      onClick={[Function]}
                                      onClickHandler={[Function]}
                                      setClass={[Function]}
                                      setText={[Function]}
                                      textAfter="Copied!"
                                      textBefore="Copy signature"
                                      textState="Copy signature"
                                    >
                                      <Button
                                        classState="button is-primary"
                                        onClick={[Function]}
                                        textState="Copy signature"
                                      >
                                        <button
                                          className="button is-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Copy signature
                                        </button>
                                      </Button>
                                    </mapProps(Button)>
                                  </withHandlers(mapProps(Button))>
                                </withState(withHandlers(mapProps(Button)))>
                              </withState(withState(withHandlers(mapProps(Button))))>
                            </div>
                          </div>
                          <RepliesAndForwards
                            brandLink="https://purple.telstra.com/"
                            brandLinkName="purple.telstra.com"
                            brandLogo={
                              Object {
                                "alt": "Telstra Purple",
                                "link": "https://readifysignatures.blob.core.windows.net/images/purple-email-logo.png",
                              }
                            }
                            brandName="Telstra Purple"
                            email="your.name@purple.telstra.com"
                            mobile="+61 111 222 333"
                            name="Your Name"
                            pronoun="he/him | she/her | they/them"
                            qualifications=""
                            sigType="support"
                            supportEmail="support@some.domain"
                            supportHotline="1800 xyz xyz"
                            title=""
                            twitter=""
                          >
                            <div>
                              <p
                                style={
                                  Object {
                                    "color": "black",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "9pt",
                                  }
                                }
                              >
                                --
                                <br />
                                <b>
                                  Your Name
                                   (
                                  he/him | she/her | they/them
                                  ) | 
                                  Telstra Purple
                                </b>
                                <br />
                                <b>
                                  M
                                </b>
                                 
                                <a
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                    }
                                  }
                                  href="tel:+61111222333"
                                  style={
                                    Object {
                                      "color": "#0E39FB",
                                    }
                                  }
                                />
                                 
                                | 
                                <b>
                                  E
                                </b>
                                 
                                <a
                                  href="mailto:your.name@purple.telstra.com"
                                  style={
                                    Object {
                                      "color": "#0E39FB",
                                    }
                                  }
                                >
                                  your.name@purple.telstra.com
                                </a>
                                 
                                |
                                 
                                <b>
                                  W
                                </b>
                                 
                                <a
                                  href="https://purple.telstra.com/"
                                  style={
                                    Object {
                                      "color": "#0E39FB",
                                    }
                                  }
                                >
                                  purple.telstra.com
                                </a>
                                <span>
                                  <br />
                                  <b>
                                    Support Hotline
                                  </b>
                                   
                                  <a
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": "1800 xyz xyz",
                                      }
                                    }
                                    href="tel:1800 xyz xyz"
                                    style={
                                      Object {
                                        "color": "#0E39FB",
                                      }
                                    }
                                  />
                                   
                                  | 
                                  <b>
                                    Support Email
                                  </b>
                                   
                                  <a
                                    href="mailto:support@some.domain"
                                    style={
                                      Object {
                                        "color": "#0E39FB",
                                      }
                                    }
                                  >
                                    support@some.domain
                                  </a>
                                </span>
                              </p>
                              <div
                                style={
                                  Object {
                                    "color": "#4a4a4a",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "6.5pt",
                                    "lineHeight": "1.5",
                                  }
                                }
                              >
                                This email may contain confidential information.
                                <br />
                                If I've sent it to you by accident, please delete it immediately.
                              </div>
                            </div>
                          </RepliesAndForwards>
                        </div>
                      </PurpleSignatureContainer>
                    </SignatureContainer>
                  </mapProps(SignatureContainer)>
                </withProps(mapProps(SignatureContainer))>
              </form>
            </Form>
          </Connect(Form)>
        </div>
      </section>
    </div>
  </App>
</Provider>
`;

exports[`Renders Purple support 2`] = `
Array [
  "Warning: validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s",
  "<tr>",
  "table",
]
`;
